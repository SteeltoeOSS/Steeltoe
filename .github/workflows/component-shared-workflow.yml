# .github/workflows/component-shared-workflow.yml

name: Component Build

on:
  workflow_call:
    inputs:
      component:
        required: true
        type: string
      OS:
        required: true
        type: string
      skipFilter:
        required: false
        type: string
      runConfigServer:
        required: false
        type: boolean
        default: false
jobs:
  build:
    name: Build ${{ inputs.component }} on ${{ inputs.OS }}
    runs-on: ${{ inputs.OS }}-latest

    services:
      configserver:
        image: ${{ inputs.runConfigServer && 'steeltoe.azurecr.io/config-server' || null }}
        env:
          eureka.client.enabled: true
          eureka.client.serviceUrl.defaultZone: http://eurekaServer:8761/eureka
          eureka.instance.hostname: localhost
          eureka.instance.instanceId: localhost:configserver:8888
        ports:
          - 8888:8888
      eureka:
        image: ${{ inputs.runConfigServer && 'steeltoe.azurecr.io/eureka-server' || null }}
        ports:
          - 8888:8888

    env:
      DOTNET_NOLOGO: true
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_GENERATE_ASPNET_CERTIFICATE: ${{ inputs.OS == 'macOS' && 'false' || '' }}
      SolutionFile: src/Steeltoe.${{ inputs.component }}.slnf
      CommonTestArgs: >-
        --no-build --configuration Release --blame-crash --blame-hang-timeout 3m
        --collect "XPlat Code Coverage" --settings coverlet.runsettings --logger trx --results-directory ${{ github.workspace }}

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: |
            8.0.*
            9.0.*

      - name: Install Nerdbank.GitVersioning (macOS only)
        if: ${{ inputs.OS == 'macos' }}
        run: dotnet tool install --global nbgv

      - name: Set package version
        run: nbgv cloud

      - name: Restore dependencies
        run: dotnet restore ${{ env.SolutionFile }} --verbosity minimal --configfile nuget.config

      - name: Build solution
        run: dotnet build ${{ env.SolutionFile }} --no-restore --configuration Release --verbosity minimal

      - name: Test (net8.0)
        run: dotnet test ${{ env.SolutionFile }} --framework net8.0 ${{ inputs.skipFilter }} ${{ env.CommonTestArgs }}

      - name: Test (net9.0)
        run: dotnet test ${{ env.SolutionFile }} --framework net9.0 ${{ inputs.skipFilter }} ${{ env.CommonTestArgs }}

      - name: Upload hang dumps (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: FailedTestOutput-${{ inputs.OS }}
          path: '**/*.dmp'

      - name: Publish test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestResults-${{ inputs.OS }}
          path: '**/*.trx'

      - name: Report test results
        uses: dorny/test-reporter@v2
        with:
          artifact: TestResults-${{ inputs.OS }}
          name: ${{ inputs.OS }} test results
          reporter: dotnet-trx
          path: '*.trx'
