pr:
  paths:
    include:
    - '*'  # must quote since "*" is a YAML reserved character; we want a string
    exclude:
    - README.md
    - roadmaps/*

jobs:
- job: Steeltoe_Sonar
  variables:
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
  pool:
    vmImage: ubuntu-latest
  steps:
  - checkout: self
    fetchDepth: 0
  - task: UseDotNet@2
    displayName: Install .NET 6
    inputs:
      version: 6.0.x
  - task: UseDotNet@2
    displayName: Install .NET 8
    inputs:
      version: 8.0.x
  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: restore
      verbosityRestore: Minimal
      projects: src/Steeltoe.All.sln
      feedsToUse: config
      nugetConfigPath: nuget.config
  - task: PowerShell@2
    displayName: Set package version
    inputs:
      targetType: 'inline'
      script: |
        nbgv cloud
  - task: SonarCloudPrepare@1
    displayName: Prepare analysis on SonarCloud
    inputs:
      SonarCloud: SonarCloud
      organization: steeltoeoss
      projectKey: SteeltoeOSS_steeltoe
      extraProperties: |
          sonar.cs.opencover.reportsPaths=$(Build.SourcesDirectory)/**/*opencover.xml
          sonar.cs.vstest.reportsPaths=$(Build.SourcesDirectory)/*.trx
          sonar.coverage.exclusions=**/test/**/*
  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: build
      projects: src/Steeltoe.All.sln
      arguments: --no-restore -c $(buildConfiguration) -v minimal
  - script: |
      docker run -d --name configserver -p 8888:8888 steeltoeoss/config-server --spring.cloud.config.server.git.default-label=main
      docker run -d --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management
    displayName: Start Docker services
  - task: DotNetCoreCLI@2
    displayName: dotnet test 6.0
    inputs:
      command: test
      projects: '**/*.csproj'
      arguments: '--blame-hang-timeout 3m -f net6.0 --no-build -c $(buildConfiguration) -maxcpucount:1 --filter "Category!=SkipOnLinux" --collect "XPlat Code Coverage" --settings coverlet.runsettings --logger trx --results-directory $(Build.SourcesDirectory)'
      publishTestResults: false
  - task: DotNetCoreCLI@2
    displayName: dotnet test 8.0
    inputs:
      command: test
      projects: '**/*.csproj'
      arguments: '--blame-hang-timeout 3m -f net8.0 --no-build -c $(buildConfiguration) -maxcpucount:1 --filter "Category!=SkipOnLinux" --collect "XPlat Code Coverage" --settings coverlet.runsettings --logger trx --results-directory $(Build.SourcesDirectory)'
      publishTestResults: false
  - task: CopyFiles@2
    condition: failed()
    inputs:
      contents: $(Build.SourcesDirectory)/**/*.dmp
      targetFolder: $(Build.ArtifactStagingDirectory)/hangdumps
  - publish: $(Build.ArtifactStagingDirectory)/hangdumps
    condition: failed()
    displayName: Publish test result files if tests fail
    artifact: FailedTestOutput-$(Agent.JobName)
  - script: |
      docker kill configserver
      docker rm configserver
      docker kill rabbitmq
      docker rm rabbitmq
    displayName: Stop Docker services
  - task: PublishTestResults@2
    condition: succeededOrFailed()
    displayName: Publish test results
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: '*.trx'
      mergeTestResults: true
  - task: SonarCloudAnalyze@1
    condition: succeededOrFailed()
    displayName: Run code analysis
  - task: SonarCloudPublish@1
    condition: succeededOrFailed()
    displayName: Publish quality gate result
