trigger:
  branches:
    include:
    - main
    - release/*
  paths:
    exclude:
    - README.md
    - roadmaps/*

jobs:
- job: Steeltoe_Package
  pool:
    vmImage: windows-latest
  variables:
    DOTNET_NOLOGO: true
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    DOTNET_CLI_TELEMETRY_OPTOUT: 1
  steps:
  - checkout: self
    fetchDepth: 0
  # Temporary workaround for https://github.com/actions/runner-images/issues/7215, caused by https://github.com/dotnet/sdk/issues/30625#issuecomment-1445175355
  - task: UseDotNet@2
    displayName: Install .NET 7
    inputs:
      version: 7.0.201
  - task: DotNetCoreCLI@2
    displayName: Install Nerdbank.GitVersioning tool
    inputs:
      command: custom
      custom: tool
      arguments: install --tool-path . nbgv
  - task: PowerShell@2
    displayName: Set PackageVersion variable
    env:
      PackageVersion: $(PackageVersion)
      PackageVersionOverride: $(PackageVersionOverride)
    inputs:
      targetType: 'inline'
      script: |
        .\nbgv cloud

        if ($env:PackageVersionOverride) {
            $env:PackageVersion = $env:PackageVersionOverride
        }
        else {
          $version = .\nbgv.exe get-version -f json | ConvertFrom-Json
          $env:PackageVersion = $version.NuGetPackageVersion
        }

        Write-Host "##vso[task.setvariable variable=PackageVersion;]$env:PackageVersion"
  - task: DotNetCoreCLI@2
    displayName: dotnet restore
    inputs:
      command: restore
      projects: src/Steeltoe.All.sln
      feedsToUse: config
      nugetConfigPath: nuget.config
  - task: DotNetCoreCLI@2
    displayName: dotnet build
    inputs:
      command: build
      projects: src/Steeltoe.All.sln
      arguments: --no-restore -c Release -v n
  - task: DotNetCoreCLI@2
    displayName: dotnet pack
    inputs:
      command: pack
      feedsToUse: select
      packagesToPack: src/Steeltoe.All.sln
      configuration: Release
      packDirectory: $(Build.ArtifactStagingDirectory)/packages
      versioningScheme: byEnvVar
      versionEnvVar: PackageVersion
      nobuild: true
  - task: PowerShell@2
    condition: and(succeeded(), not(eq(variables['build.reason'], 'PullRequest')))
    displayName: Authenticode sign packages
    inputs:
      filePath: build/sign-packages.ps1
    env:
      SignClientUser: $(SignClientUser)
      SignClientSecret: $(SignClientSecret)
      ArtifactDirectory: $(Build.ArtifactStagingDirectory)/packages
  - publish: $(Build.ArtifactStagingDirectory)/packages
    condition: succeeded()
    displayName: Publish build artifacts
    artifact: Packages
