# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
trigger:
- azure-pipelines

variables:
  BuildConfiguration: 'Debug'
  PackageVersion: join('2.2.1-', $(Build.BuildId))
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  System.Debug: true

jobs:
#- job: Linux_Build_and_Test
#  pool:
#    vmImage: 'Ubuntu-16.04'
#  steps:
#  - task: DotNetCoreCLI@2
#    inputs:
#      command: build
#      projects: '**/*.sln'
#      arguments: '--configuration $(buildConfiguration)'
#  - task: DotNetCoreCLI@2
#    inputs:
#      command: test
#      projects: '**/*.Test/*.csproj'
#      arguments: '--configuration $(buildConfiguration) --framework netcoreapp2.0'
#  - task: DotNetCoreCLI@2
#    inputs:
#      command: test
#      projects: '**/*.Test/*.csproj'
#      arguments: '--configuration $(buildConfiguration) --framework netcoreapp2.1'
#  - task: DotNetCoreCLI@2
#    inputs:
#      command: test
#      projects: '**/*.Test/*.csproj'
#      arguments: '--configuration $(buildConfiguration) --framework netcoreapp2.2'
#- job: MacOS_Build_and_Test
#  pool:
#    vmImage: 'macOS-10.14'
#  steps:
#  - task: DotNetCoreCLI@2
#    inputs:
#      command: build
#      projects: '**/*.sln'
#      arguments: '--configuration $(buildConfiguration)'
#  - task: DotNetCoreCLI@2
#    inputs:
#      command: test
#      projects: '**/*.Test/*.csproj'
#      arguments: '--configuration $(buildConfiguration) --framework netcoreapp2.0'
#  - task: DotNetCoreCLI@2
#    inputs:
#      command: test
#      projects: '**/*.Test/*.csproj'
#      arguments: '--configuration $(buildConfiguration) --framework netcoreapp2.1'
#  - task: DotNetCoreCLI@2
#    inputs:
#      command: test
#      projects: '**/*.Test/*.csproj'
#      arguments: '--configuration $(buildConfiguration) --framework netcoreapp2.2'
- job: Windows_Build_Test_and_Package
  pool:
    vmImage: 'windows-2019'
  steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'pack'
        feedsToUse: 'select'
        arguments: '--configuration $(buildConfiguration)'
        packagesToPack: '**/*.sln'
        versioningScheme: 'byEnvVar'
        versionEnvVar: PackageVersion
#  - task: DotNetCoreCLI@2
#    inputs:
#      command: test
#      projects: '**/*.Test/*.csproj'
#      arguments: '--configuration $(buildConfiguration) --framework net461'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: $(Build.ArtifactStagingDirectory)
        ArtifactName: artifacts
        publishLocation: Container
      condition: always()
