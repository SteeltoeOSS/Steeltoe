{
  "definitions": {
    "logLevel": {
      "properties": {
        "Steeltoe": {
          "$ref": "#/definitions/logLevelThreshold"
        },
        "Steeltoe.Configuration": {
          "$ref": "#/definitions/logLevelThreshold"
        },
        "Steeltoe.Configuration.ConfigServer": {
          "$ref": "#/definitions/logLevelThreshold"
        }
      }
    }
  },
  "type": "object",
  "properties": {
    "Certificates": {
      "type": "object",
      "properties": {
        "ConfigServer": {
          "type": "object",
          "properties": {
            "CertificateFilePath": {
              "type": "string",
              "description": "Gets or sets the local path to a certificate file on disk. Use 'Steeltoe.Common.Certificates.CertificateSettings.PrivateKeyFilePath' if the private key is stored in another file."
            },
            "PrivateKeyFilePath": {
              "type": "string",
              "description": "Gets or sets the local path to a private key file on disk (optional)."
            }
          },
          "description": "Configuration settings for certificate access. Indicates where to load a 'System.Security.Cryptography.X509Certificates.X509Certificate2' from."
        }
      }
    },
    "Spring": {
      "type": "object",
      "properties": {
        "Application": {
          "type": "object",
          "properties": {
            "Name": {
              "type": "string",
              "description": "Gets or sets the name of this application."
            }
          },
          "description": "Fallback configuration settings that describe this application."
        },
        "Cloud": {
          "type": "object",
          "properties": {
            "Config": {
              "type": "object",
              "properties": {
                "Access_Token_Uri": {
                  "type": "string",
                  "description": "Gets or sets the address used by the provider to obtain a OAuth Access Token."
                },
                "Client_Id": {
                  "type": "string",
                  "description": "Gets or sets the client ID used by the provider to obtain a OAuth Access Token."
                },
                "Client_Secret": {
                  "type": "string",
                  "description": "Gets or sets the client secret used by the provider to obtain a OAuth Access Token."
                },
                "DisableTokenRenewal": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether periodic token renewal should occur. Default value: false."
                },
                "Discovery": {
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether discovery first behavior is enabled. Default value: false."
                    },
                    "ServiceId": {
                      "type": "string",
                      "description": "Gets or sets a value of the service ID used during discovery first behavior. Default value: \"configserver\"."
                    }
                  },
                  "description": "Gets service discovery settings."
                },
                "Enabled": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the Config Server provider is enabled. Default value: true."
                },
                "Env": {
                  "type": "string",
                  "description": "Gets or sets the environment used when accessing configuration data. Default value: \"Production\"."
                },
                "FailFast": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether fail-fast behavior is enabled. Default value: false."
                },
                "Headers": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Gets headers that will be added to the Config Server request."
                },
                "Health": {
                  "type": "object",
                  "properties": {
                    "Enabled": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether health check is enabled. Default value: true."
                    },
                    "TimeToLive": {
                      "type": "integer",
                      "description": "Gets or sets a value for the health check cache time-to-live. Default value: 300_000 (5 minutes)."
                    }
                  },
                  "description": "Gets health check settings."
                },
                "Label": {
                  "type": "string",
                  "description": "Gets or sets the label used when accessing configuration data."
                },
                "Name": {
                  "type": "string",
                  "description": "Gets or sets the application name used when accessing configuration data."
                },
                "Password": {
                  "type": "string",
                  "description": "Gets or sets the password used when accessing the Config Server."
                },
                "PollingInterval": {
                  "type": "string",
                  "pattern": "^-?(\\d{1,7}|((\\d{1,7}[\\.:])?(([01]?\\d|2[0-3]):[0-5]?\\d|([01]?\\d|2[0-3]):[0-5]?\\d:[0-5]?\\d)(\\.\\d{1,7})?))$",
                  "description": "Gets or sets the frequency with which app should check Config Server for changes in configuration."
                },
                "Retry": {
                  "type": "object",
                  "properties": {
                    "Attempts": {
                      "type": "integer",
                      "description": "Gets or sets the max number of retries the client will attempt. Default value: 6."
                    },
                    "Enabled": {
                      "type": "boolean",
                      "description": "Gets or sets a value indicating whether retries are enabled on failures. Default value: false."
                    },
                    "InitialInterval": {
                      "type": "integer",
                      "description": "Gets or sets initial retry interval in milliseconds. Default value: 1000."
                    },
                    "MaxInterval": {
                      "type": "integer",
                      "description": "Gets or sets max retry interval in milliseconds. Default value: 2000."
                    },
                    "Multiplier": {
                      "type": [
                        "number",
                        "string"
                      ],
                      "description": "Gets or sets the multiplier for next retry interval. Default value: 1.1."
                    }
                  },
                  "description": "Gets retry settings."
                },
                "Timeout": {
                  "type": "integer",
                  "description": "Gets or sets the request timeout in milliseconds. Default value: 60_000 (1 minute)."
                },
                "Token": {
                  "type": "string",
                  "description": "Gets or sets the token used for Vault."
                },
                "TokenRenewRate": {
                  "type": "integer",
                  "description": "Gets or sets the vault token renew rate in milliseconds. Default value: 60_000 (1 minute)."
                },
                "TokenTtl": {
                  "type": "integer",
                  "description": "Gets or sets the vault token time-to-live in milliseconds. Default value: 300_000 (5 minutes)."
                },
                "Uri": {
                  "type": "string",
                  "description": "Gets or sets a comma-delimited list of Config Server addresses. Default value: \"http://localhost:8888\"."
                },
                "Username": {
                  "type": "string",
                  "description": "Gets or sets the username used when accessing the Config Server."
                },
                "Validate_Certificates": {
                  "type": "boolean",
                  "description": "Gets or sets a value indicating whether the provider validates server certificates. Default value: true."
                }
              },
              "description": "Holds settings used to configure the Spring Cloud Config Server provider."
            }
          }
        }
      }
    }
  }
}
