#nullable enable
static Steeltoe.Management.Task.TaskServiceCollectionExtensions.AddTask(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Steeltoe.Common.IApplicationTask! task) -> void
static Steeltoe.Management.Task.TaskServiceCollectionExtensions.AddTask(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! name, System.Action<System.IServiceProvider!>! runAction) -> void
static Steeltoe.Management.Task.TaskServiceCollectionExtensions.AddTask(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, string! name, System.Action<System.IServiceProvider!>! runAction, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) -> void
static Steeltoe.Management.Task.TaskServiceCollectionExtensions.AddTask(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.Func<System.IServiceProvider!, Steeltoe.Common.IApplicationTask!>! factory) -> void
static Steeltoe.Management.Task.TaskServiceCollectionExtensions.AddTask(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, System.Func<System.IServiceProvider!, Steeltoe.Common.IApplicationTask!>! factory, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) -> void
static Steeltoe.Management.Task.TaskServiceCollectionExtensions.AddTask<T>(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services) -> void
static Steeltoe.Management.Task.TaskServiceCollectionExtensions.AddTask<T>(this Microsoft.Extensions.DependencyInjection.IServiceCollection! services, Microsoft.Extensions.DependencyInjection.ServiceLifetime lifetime) -> void
static Steeltoe.Management.Task.TaskWebHostExtensions.RunWithTasks(this Microsoft.AspNetCore.Hosting.IWebHost! webHost) -> void
static Steeltoe.Management.Task.TaskWebHostExtensions.RunWithTasks(this Microsoft.Extensions.Hosting.IHost! host) -> void
Steeltoe.Management.Task.TaskServiceCollectionExtensions
Steeltoe.Management.Task.TaskWebHostExtensions
