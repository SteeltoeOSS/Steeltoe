#nullable enable
static Steeltoe.Discovery.HttpClients.DiscoveryHttpClientBuilderExtensions.AddServiceDiscovery(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder! builder) -> Microsoft.Extensions.DependencyInjection.IHttpClientBuilder!
static Steeltoe.Discovery.HttpClients.DiscoveryHttpClientBuilderExtensions.AddServiceDiscovery<TLoadBalancer>(this Microsoft.Extensions.DependencyInjection.IHttpClientBuilder! builder) -> Microsoft.Extensions.DependencyInjection.IHttpClientBuilder!
Steeltoe.Discovery.HttpClients.DiscoveryHttpClientBuilderExtensions
Steeltoe.Discovery.HttpClients.DiscoveryHttpClientHandler
Steeltoe.Discovery.HttpClients.DiscoveryHttpClientHandler.DiscoveryHttpClientHandler(Steeltoe.Discovery.HttpClients.LoadBalancers.ILoadBalancer! loadBalancer) -> void
Steeltoe.Discovery.HttpClients.DiscoveryHttpDelegatingHandler<TLoadBalancer>
Steeltoe.Discovery.HttpClients.DiscoveryHttpDelegatingHandler<TLoadBalancer>.DiscoveryHttpDelegatingHandler(System.IServiceProvider! serviceProvider) -> void
Steeltoe.Discovery.HttpClients.LoadBalancers.ILoadBalancer
Steeltoe.Discovery.HttpClients.LoadBalancers.ILoadBalancer.ResolveServiceInstanceAsync(System.Uri! requestUri, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Uri!>!
Steeltoe.Discovery.HttpClients.LoadBalancers.ILoadBalancer.UpdateStatisticsAsync(System.Uri! requestUri, System.Uri! serviceInstanceUri, System.TimeSpan? responseTime, System.Exception? exception, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Steeltoe.Discovery.HttpClients.LoadBalancers.RandomLoadBalancer
Steeltoe.Discovery.HttpClients.LoadBalancers.RandomLoadBalancer.RandomLoadBalancer(Steeltoe.Discovery.HttpClients.LoadBalancers.ServiceInstancesResolver! serviceInstancesResolver, Microsoft.Extensions.Logging.ILogger<Steeltoe.Discovery.HttpClients.LoadBalancers.RandomLoadBalancer!>! logger) -> void
Steeltoe.Discovery.HttpClients.LoadBalancers.RandomLoadBalancer.ResolveServiceInstanceAsync(System.Uri! requestUri, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Uri!>!
Steeltoe.Discovery.HttpClients.LoadBalancers.RandomLoadBalancer.UpdateStatisticsAsync(System.Uri! requestUri, System.Uri! serviceInstanceUri, System.TimeSpan? responseTime, System.Exception? exception, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Steeltoe.Discovery.HttpClients.LoadBalancers.RoundRobinLoadBalancer
Steeltoe.Discovery.HttpClients.LoadBalancers.RoundRobinLoadBalancer.ResolveServiceInstanceAsync(System.Uri! requestUri, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Uri!>!
Steeltoe.Discovery.HttpClients.LoadBalancers.RoundRobinLoadBalancer.RoundRobinLoadBalancer(Steeltoe.Discovery.HttpClients.LoadBalancers.ServiceInstancesResolver! serviceInstancesResolver, Microsoft.Extensions.Caching.Distributed.IDistributedCache? distributedCache, Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions? cacheEntryOptions, Microsoft.Extensions.Logging.ILogger<Steeltoe.Discovery.HttpClients.LoadBalancers.RoundRobinLoadBalancer!>! logger) -> void
Steeltoe.Discovery.HttpClients.LoadBalancers.RoundRobinLoadBalancer.RoundRobinLoadBalancer(Steeltoe.Discovery.HttpClients.LoadBalancers.ServiceInstancesResolver! serviceInstancesResolver, Microsoft.Extensions.Logging.ILogger<Steeltoe.Discovery.HttpClients.LoadBalancers.RoundRobinLoadBalancer!>! logger) -> void
Steeltoe.Discovery.HttpClients.LoadBalancers.RoundRobinLoadBalancer.UpdateStatisticsAsync(System.Uri! requestUri, System.Uri! serviceInstanceUri, System.TimeSpan? responseTime, System.Exception? exception, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task!
Steeltoe.Discovery.HttpClients.LoadBalancers.ServiceInstancesResolver
Steeltoe.Discovery.HttpClients.LoadBalancers.ServiceInstancesResolver.ResolveInstancesAsync(string! serviceId, System.Threading.CancellationToken cancellationToken) -> System.Threading.Tasks.Task<System.Collections.Generic.IList<Steeltoe.Common.Discovery.IServiceInstance!>!>!
Steeltoe.Discovery.HttpClients.LoadBalancers.ServiceInstancesResolver.ServiceInstancesResolver(System.Collections.Generic.IEnumerable<Steeltoe.Common.Discovery.IDiscoveryClient!>! discoveryClients, Microsoft.Extensions.Caching.Distributed.IDistributedCache? distributedCache, Microsoft.Extensions.Caching.Distributed.DistributedCacheEntryOptions? cacheEntryOptions, Microsoft.Extensions.Logging.ILogger<Steeltoe.Discovery.HttpClients.LoadBalancers.ServiceInstancesResolver!>! logger) -> void
Steeltoe.Discovery.HttpClients.LoadBalancers.ServiceInstancesResolver.ServiceInstancesResolver(System.Collections.Generic.IEnumerable<Steeltoe.Common.Discovery.IDiscoveryClient!>! discoveryClients, Microsoft.Extensions.Logging.ILogger<Steeltoe.Discovery.HttpClients.LoadBalancers.ServiceInstancesResolver!>! logger) -> void
